version: '3.8'

services:
  app-staging:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"  # Staging on port 8001
    container_name: medical-patients-staging
    environment:
      - ENVIRONMENT=staging
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PORT=8000
      - HOST=0.0.0.0
      # Staging database
      - DATABASE_URL=postgresql://medgen_user:medgen_password@medical-patients_db_1:5432/medgen_db_staging
      # Use Redis database 1 for staging (0 is for production)
      - REDIS_URL=redis://medical-patients_redis_1:6379/1
      - API_KEY=${STAGING_API_KEY:-staging_secret_key_here}
      - SECRET_KEY=${STAGING_SECRET_KEY:-staging_secret}
      - DEBUG=${DEBUG:-False}
      - CORS_ORIGINS=https://staging.milmed.tech,https://timeline.milmed.tech
    external_links:
      # Connect to existing production containers
      - medical-patients_db_1:medical-patients_db_1
      - medical-patients_redis_1:medical-patients_redis_1
    networks:
      - medical-patients-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    command: >
      sh -c "
      alembic upgrade head &&
      uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 2 --proxy-headers
      "

networks:
  medical-patients-network:
    external: true
    name: medical-patients_default

# No volumes needed - we'll use the production volumes