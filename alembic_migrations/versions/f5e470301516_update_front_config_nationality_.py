"""update_front_config_nationality_distribution_structure

Revision ID: f5e470301516
Revises: 88eedb601203
Create Date: 2025-05-20 10:11:59.123456

"""

from typing import Sequence, Union

# revision identifiers, used by Alembic.
revision: str = "f5e470301516"
down_revision: Union[str, None] = "88eedb601203"  # Ensure this points to the previous migration
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # This migration reflects a change in the expected JSON structure
    # for the 'nationality_distribution' field within the 'front_configs'
    # array, which is part of the 'configuration_templates' table's JSONB column.
    #
    # Previous structure (within each front_config):
    # "nationality_distribution": {
    #   "USA": 60.0,
    #   "CAN": 40.0
    # }
    #
    # New structure (within each front_config):
    # "nationality_distribution": [
    #   { "nationality_code": "USA", "percentage": 60.0 },
    #   { "nationality_code": "CAN", "percentage": 40.0 }
    # ]
    #
    # No direct SQL schema change is needed if 'front_configs' is already
    # stored in a flexible JSONB column. This migration serves as a marker
    # for this structural evolution and for Pydantic model changes.
    # If data migration were needed for existing records, it would be done here.
    # For example, one might iterate through existing configuration_templates
    # and update the nationality_distribution structure.
    # However, given the project's clean install approach for PostgreSQL,
    # data migration for existing records is not implemented here.
    pass
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Reverting this structural change conceptually means expecting the old
    # dictionary format for 'nationality_distribution'.
    # A data migration to convert from the list-of-objects format back to
    # the dictionary format would be complex and is highly dependent on
    # application logic. It's omitted here for simplicity, as downgrading
    # such structural JSON changes is often non-trivial and may not be
    # fully reversible without potential data loss or ambiguity if new
    # features (e.g., order dependency) were utilized.
    pass
    # ### end Alembic commands ###
